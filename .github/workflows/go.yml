# This is a basic workflow

name: Go

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - '*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    strategy:
      matrix:
        go-version: [1.15, 1.16]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@preview
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      # Install all the dependencies
      - name: Install dependencies
        run: |
          go version
          go get -u golang.org/x/lint/golint
          go get github.com/mattn/go-isatty@v0.0.12
          go get golang.org/x/crypto/ssh/terminal@v0.0.0-20201221181555-eec23a3978ad

      # Run build of the application
      - name: Run build
        run: go build -v .

      # Run vet & lint on the code
      - name: Run vet & lint
        run: |
          go vet ./...
          golint ./...

      # Run main.go
      - name: Run main
        run: go run ./main.go
  # ================
  # RELEASE JOB
  #   runs after a successful build
  #   only runs on push "v*" tag
  # ================
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1000

      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.x

      - name: Cache Go modules
        uses: actions/cache@preview
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      # Install all the dependencies
      - name: Install dependencies
        run: |
          go version
          go get github.com/mattn/go-isatty@v0.0.12

      # Run build of the application
      - name: Run build and MakeFile
        id: binaries
        run: |
          go env -w GOFLAGS=-mod=mod
          go mod tidy
          go build -v .
          make -f MakeFile all

      - name: Get current tag name
        run: |
          echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo "PREVIOUS_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))" >> $GITHUB_ENV
      - name: "Build Changelog"
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v1
        with:
          configuration: ".github/configuration_repo.json"
          owner: "mr-pmillz"
          repo: "coinmon-go"
          fromTag: ${{ env.PREVIOUS_TAG }}
          toTag: ${{ env.TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          body: ${{steps.github_release.outputs.changelog}}
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
          files: |
            bin/linux/amd64/coinmon-go-linux-amd64.gz
            bin/linux/arm64/coinmon-go-linux-arm64.gz
            bin/darwin/amd64/coinmon-go-x86_64-apple-darwin_amd64.gz
            bin/darwin/arm64/coinmon-go-x86_64-apple-darwin_arm64.gz
            bin/windows/amd64/coinmon-go-x86_64-windows_amd64.gz
            bin/windows/386/coinmon-go-386-windows.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

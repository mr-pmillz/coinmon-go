# This is a basic workflow

name: CI

on:
  push:
    tags:
      - '*'
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.18]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - id: go-cache-paths
        run: |
          echo "::set-output name=gobuild::$(go env GOCACHE)"
          echo "::set-output name=gomod::$(go env GOMODCACHE)"

      # Cache go build cache
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.gobuild }}
          key: ${{ runner.os }}-gobuild-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.gomod }}
          key: ${{ runner.os }}-gomod-${{ hashFiles('**/go.sum') }}

      # Run build of the application
      - name: Run build
        run: |
          go get github.com/mattn/go-isatty@v0.0.12
          make -f Makefile build

      # Run main.go
      - name: Run main
        env:
          COINMARKETCAP_API_KEY: ${{ secrets.COINMARKETCAP_API_KEY }}
        run: go run ./main.go -t 10
  # ================
  # RELEASE JOB
  #   runs after a successful build
  #   only runs on push "v*" tag
  # ================
  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1000

      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      # Cache go mod cache
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Set GOPATH
        run: |
          echo "GOPATH=$(go env GOPATH)/bin" >> $GITHUB_ENV

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload assets
        uses: actions/upload-artifact@v2
        with:
          name: coinmon-go
          path: dist/*
